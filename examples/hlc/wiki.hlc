; Constants
# ID = \x -> x
# TRUE = \x -> \y -> x
# FALSE = \x -> \y -> y

; Logic
# AND = \p -> \q -> p q p
# OR = \p -> \q -> p p q
# NOT = \p -> p FALSE TRUE
# IFTHENELSE = \p -> \a -> \b -> p a b

; Pair
# PAIR = \x -> \y -> \f -> f x y
# FIRST = \p -> p TRUE
# SECOND = \p -> p FALSE

; List
# NIL = \x -> TRUE
# NULL = \p -> p (\x -> \y -> FALSE)
# REPEAT = \n -> \x -> n (PAIR x) NIL

; Arithmetic - succ
# SUCC = \n -> \f -> \x -> f (n f x)
; PLUS = \m -> \n -> \f -> \x -> m f (n f x)
# PLUS = \m -> \n -> m SUCC n
; MULT = \m -> \n -> \f -> m (n f)
# MULT = \m -> \n -> m (PLUS n) 0
# POW = \b -> \e -> e b

; Natural numbers
; 0 = \f -> \x -> x
; 1 = \f -> \x -> f x
; 2 = \f -> \x -> f (f x)
; 3 = \f -> \x -> f (f (f x))

; 0 = \f x -> x
; 1 = \f x -> f x
; 2 = \f x -> f (f x)
; 3 = \f x -> f (f (f x))

; Arithmetic - pred
# ISZERO = \n -> n (\x -> FALSE) TRUE
# Φ = \x -> PAIR (SECOND x) (SUCC (SECOND x))
# PHI = Φ
; PRED = \n -> \f -> \x -> n (\g -> \h -> h (g f)) (\u -> x) (\u -> u)
; PRED = \n -> n (\g -> \k -> ISZERO (g 1) k (PLUS (g k) 1)) (\v -> 0) 0
# PRED = \n -> FIRST (n Φ (PAIR 0 0))
# SUB = \m -> \n -> n PRED m

; Compare
# LEQ = \m -> \n -> ISZERO (SUB m n)
